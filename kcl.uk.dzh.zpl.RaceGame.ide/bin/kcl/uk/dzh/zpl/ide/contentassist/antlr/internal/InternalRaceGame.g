/*
 * generated by Xtext 2.26.0
 */
grammar InternalRaceGame;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package kcl.uk.dzh.zpl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package kcl.uk.dzh.zpl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import kcl.uk.dzh.zpl.services.RaceGameGrammarAccess;

}
@parser::members {
	private RaceGameGrammarAccess grammarAccess;

	public void setGrammarAccess(RaceGameGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRaceGame
entryRuleRaceGame
:
{ before(grammarAccess.getRaceGameRule()); }
	 ruleRaceGame
{ after(grammarAccess.getRaceGameRule()); } 
	 EOF 
;

// Rule RaceGame
ruleRaceGame 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRaceGameAccess().getGroup()); }
		(rule__RaceGame__Group__0)
		{ after(grammarAccess.getRaceGameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndGameBehaviour
entryRuleEndGameBehaviour
:
{ before(grammarAccess.getEndGameBehaviourRule()); }
	 ruleEndGameBehaviour
{ after(grammarAccess.getEndGameBehaviourRule()); } 
	 EOF 
;

// Rule EndGameBehaviour
ruleEndGameBehaviour 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndGameBehaviourAccess().getGroup()); }
		(rule__EndGameBehaviour__Group__0)
		{ after(grammarAccess.getEndGameBehaviourAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScreenSpecification
entryRuleScreenSpecification
:
{ before(grammarAccess.getScreenSpecificationRule()); }
	 ruleScreenSpecification
{ after(grammarAccess.getScreenSpecificationRule()); } 
	 EOF 
;

// Rule ScreenSpecification
ruleScreenSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScreenSpecificationAccess().getGroup()); }
		(rule__ScreenSpecification__Group__0)
		{ after(grammarAccess.getScreenSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObstaclepecification
entryRuleObstaclepecification
:
{ before(grammarAccess.getObstaclepecificationRule()); }
	 ruleObstaclepecification
{ after(grammarAccess.getObstaclepecificationRule()); } 
	 EOF 
;

// Rule Obstaclepecification
ruleObstaclepecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObstaclepecificationAccess().getGroup()); }
		(rule__Obstaclepecification__Group__0)
		{ after(grammarAccess.getObstaclepecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObstacleMember
entryRuleObstacleMember
:
{ before(grammarAccess.getObstacleMemberRule()); }
	 ruleObstacleMember
{ after(grammarAccess.getObstacleMemberRule()); } 
	 EOF 
;

// Rule ObstacleMember
ruleObstacleMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObstacleMemberAccess().getAlternatives()); }
		(rule__ObstacleMember__Alternatives)
		{ after(grammarAccess.getObstacleMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWaterObstacle
entryRuleWaterObstacle
:
{ before(grammarAccess.getWaterObstacleRule()); }
	 ruleWaterObstacle
{ after(grammarAccess.getWaterObstacleRule()); } 
	 EOF 
;

// Rule WaterObstacle
ruleWaterObstacle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWaterObstacleAccess().getGroup()); }
		(rule__WaterObstacle__Group__0)
		{ after(grammarAccess.getWaterObstacleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWallObstacle
entryRuleWallObstacle
:
{ before(grammarAccess.getWallObstacleRule()); }
	 ruleWallObstacle
{ after(grammarAccess.getWallObstacleRule()); } 
	 EOF 
;

// Rule WallObstacle
ruleWallObstacle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWallObstacleAccess().getGroup()); }
		(rule__WallObstacle__Group__0)
		{ after(grammarAccess.getWallObstacleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldSpecification
entryRuleFieldSpecification
:
{ before(grammarAccess.getFieldSpecificationRule()); }
	 ruleFieldSpecification
{ after(grammarAccess.getFieldSpecificationRule()); } 
	 EOF 
;

// Rule FieldSpecification
ruleFieldSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldSpecificationAccess().getGroup()); }
		(rule__FieldSpecification__Group__0)
		{ after(grammarAccess.getFieldSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOptionSpecification
entryRuleOptionSpecification
:
{ before(grammarAccess.getOptionSpecificationRule()); }
	 ruleOptionSpecification
{ after(grammarAccess.getOptionSpecificationRule()); } 
	 EOF 
;

// Rule OptionSpecification
ruleOptionSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionSpecificationAccess().getAlternatives()); }
		(rule__OptionSpecification__Alternatives)
		{ after(grammarAccess.getOptionSpecificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuperModeDeclaration
entryRuleSuperModeDeclaration
:
{ before(grammarAccess.getSuperModeDeclarationRule()); }
	 ruleSuperModeDeclaration
{ after(grammarAccess.getSuperModeDeclarationRule()); } 
	 EOF 
;

// Rule SuperModeDeclaration
ruleSuperModeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuperModeDeclarationAccess().getGroup()); }
		(rule__SuperModeDeclaration__Group__0)
		{ after(grammarAccess.getSuperModeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartFieldDeclaration
entryRuleStartFieldDeclaration
:
{ before(grammarAccess.getStartFieldDeclarationRule()); }
	 ruleStartFieldDeclaration
{ after(grammarAccess.getStartFieldDeclarationRule()); } 
	 EOF 
;

// Rule StartFieldDeclaration
ruleStartFieldDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartFieldDeclarationAccess().getGroup()); }
		(rule__StartFieldDeclaration__Group__0)
		{ after(grammarAccess.getStartFieldDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAllowRestartMenu
entryRuleAllowRestartMenu
:
{ before(grammarAccess.getAllowRestartMenuRule()); }
	 ruleAllowRestartMenu
{ after(grammarAccess.getAllowRestartMenuRule()); } 
	 EOF 
;

// Rule AllowRestartMenu
ruleAllowRestartMenu 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAllowRestartMenuAccess().getGroup()); }
		(rule__AllowRestartMenu__Group__0)
		{ after(grammarAccess.getAllowRestartMenuAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplication
entryRuleMultiplication
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
		(rule__Multiplication__Group__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntVarExpression
entryRuleIntVarExpression
:
{ before(grammarAccess.getIntVarExpressionRule()); }
	 ruleIntVarExpression
{ after(grammarAccess.getIntVarExpressionRule()); } 
	 EOF 
;

// Rule IntVarExpression
ruleIntVarExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntVarExpressionAccess().getVarAssignment()); }
		(rule__IntVarExpression__VarAssignment)
		{ after(grammarAccess.getIntVarExpressionAccess().getVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValAssignment()); }
		(rule__IntLiteral__ValAssignment)
		{ after(grammarAccess.getIntLiteralAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealLiteralAccess().getValAssignment()); }
		(rule__RealLiteral__ValAssignment)
		{ after(grammarAccess.getRealLiteralAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleREAL
entryRuleREAL
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getREALRule()); }
	 ruleREAL
{ after(grammarAccess.getREALRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule REAL
ruleREAL 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getREALAccess().getGroup()); }
		(rule__REAL__Group__0)
		{ after(grammarAccess.getREALAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

rule__ObstacleMember__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObstacleMemberAccess().getWallObstacleParserRuleCall_0()); }
		ruleWallObstacle
		{ after(grammarAccess.getObstacleMemberAccess().getWallObstacleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getObstacleMemberAccess().getWaterObstacleParserRuleCall_1()); }
		ruleWaterObstacle
		{ after(grammarAccess.getObstacleMemberAccess().getWaterObstacleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionSpecification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionSpecificationAccess().getStartFieldDeclarationParserRuleCall_0()); }
		ruleStartFieldDeclaration
		{ after(grammarAccess.getOptionSpecificationAccess().getStartFieldDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOptionSpecificationAccess().getAllowRestartMenuParserRuleCall_1()); }
		ruleAllowRestartMenu
		{ after(grammarAccess.getOptionSpecificationAccess().getAllowRestartMenuParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOptionSpecificationAccess().getSuperModeDeclarationParserRuleCall_2()); }
		ruleSuperModeDeclaration
		{ after(grammarAccess.getOptionSpecificationAccess().getSuperModeDeclarationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOptionSpecificationAccess().getEndGameBehaviourParserRuleCall_3()); }
		ruleEndGameBehaviour
		{ after(grammarAccess.getOptionSpecificationAccess().getEndGameBehaviourParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getOperatorPlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getAdditionAccess().getOperatorPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getAdditionAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultiplicationAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationAccess().getOperatorSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultiplicationAccess().getOperatorSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getIntLiteralParserRuleCall_0()); }
		ruleIntLiteral
		{ after(grammarAccess.getPrimaryAccess().getIntLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getIntVarExpressionParserRuleCall_1()); }
		ruleIntVarExpression
		{ after(grammarAccess.getPrimaryAccess().getIntVarExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getRealLiteralParserRuleCall_2()); }
		ruleRealLiteral
		{ after(grammarAccess.getPrimaryAccess().getRealLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaceGame__Group__0__Impl
	rule__RaceGame__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaceGameAccess().getGameKeyword_0()); }
	'game'
	{ after(grammarAccess.getRaceGameAccess().getGameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaceGame__Group__1__Impl
	rule__RaceGame__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaceGameAccess().getNameAssignment_1()); }
	(rule__RaceGame__NameAssignment_1)
	{ after(grammarAccess.getRaceGameAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaceGame__Group__2__Impl
	rule__RaceGame__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaceGameAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRaceGameAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaceGame__Group__3__Impl
	rule__RaceGame__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaceGameAccess().getVariableAssignment_3()); }
	(rule__RaceGame__VariableAssignment_3)?
	{ after(grammarAccess.getRaceGameAccess().getVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaceGame__Group__4__Impl
	rule__RaceGame__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaceGameAccess().getScreenAssignment_4()); }
	(rule__RaceGame__ScreenAssignment_4)
	{ after(grammarAccess.getRaceGameAccess().getScreenAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaceGame__Group__5__Impl
	rule__RaceGame__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRaceGameAccess().getFieldsAssignment_5()); }
		(rule__RaceGame__FieldsAssignment_5)
		{ after(grammarAccess.getRaceGameAccess().getFieldsAssignment_5()); }
	)
	(
		{ before(grammarAccess.getRaceGameAccess().getFieldsAssignment_5()); }
		(rule__RaceGame__FieldsAssignment_5)*
		{ after(grammarAccess.getRaceGameAccess().getFieldsAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaceGame__Group__6__Impl
	rule__RaceGame__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRaceGameAccess().getOptionsAssignment_6()); }
		(rule__RaceGame__OptionsAssignment_6)
		{ after(grammarAccess.getRaceGameAccess().getOptionsAssignment_6()); }
	)
	(
		{ before(grammarAccess.getRaceGameAccess().getOptionsAssignment_6()); }
		(rule__RaceGame__OptionsAssignment_6)*
		{ after(grammarAccess.getRaceGameAccess().getOptionsAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaceGame__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaceGameAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getRaceGameAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariableDeclarationAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
	(rule__VariableDeclaration__NameAssignment_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getValueAssignment_3()); }
	(rule__VariableDeclaration__ValueAssignment_3)
	{ after(grammarAccess.getVariableDeclarationAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndGameBehaviour__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndGameBehaviour__Group__0__Impl
	rule__EndGameBehaviour__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndGameBehaviourAccess().getEndGameKeyword_0()); }
	'end-game'
	{ after(grammarAccess.getEndGameBehaviourAccess().getEndGameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndGameBehaviour__Group__1__Impl
	rule__EndGameBehaviour__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndGameBehaviourAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEndGameBehaviourAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndGameBehaviour__Group__2__Impl
	rule__EndGameBehaviour__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndGameBehaviourAccess().getWinAssignment_2()); }
	(rule__EndGameBehaviour__WinAssignment_2)
	{ after(grammarAccess.getEndGameBehaviourAccess().getWinAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndGameBehaviour__Group__3__Impl
	rule__EndGameBehaviour__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndGameBehaviourAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getEndGameBehaviourAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndGameBehaviour__Group__4__Impl
	rule__EndGameBehaviour__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndGameBehaviourAccess().getLostAssignment_4()); }
	(rule__EndGameBehaviour__LostAssignment_4)
	{ after(grammarAccess.getEndGameBehaviourAccess().getLostAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndGameBehaviour__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndGameBehaviourAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getEndGameBehaviourAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScreenSpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScreenSpecification__Group__0__Impl
	rule__ScreenSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScreenSpecificationAccess().getScreenKeyword_0()); }
	'screen'
	{ after(grammarAccess.getScreenSpecificationAccess().getScreenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScreenSpecification__Group__1__Impl
	rule__ScreenSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScreenSpecificationAccess().getNameAssignment_1()); }
	(rule__ScreenSpecification__NameAssignment_1)
	{ after(grammarAccess.getScreenSpecificationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScreenSpecification__Group__2__Impl
	rule__ScreenSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScreenSpecificationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getScreenSpecificationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScreenSpecification__Group__3__Impl
	rule__ScreenSpecification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScreenSpecificationAccess().getWidthKeyword_3()); }
	'Width'
	{ after(grammarAccess.getScreenSpecificationAccess().getWidthKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScreenSpecification__Group__4__Impl
	rule__ScreenSpecification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScreenSpecificationAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getScreenSpecificationAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScreenSpecification__Group__5__Impl
	rule__ScreenSpecification__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScreenSpecificationAccess().getScreenWidthAssignment_5()); }
	(rule__ScreenSpecification__ScreenWidthAssignment_5)
	{ after(grammarAccess.getScreenSpecificationAccess().getScreenWidthAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScreenSpecification__Group__6__Impl
	rule__ScreenSpecification__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScreenSpecificationAccess().getHeightKeyword_6()); }
	'Height'
	{ after(grammarAccess.getScreenSpecificationAccess().getHeightKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScreenSpecification__Group__7__Impl
	rule__ScreenSpecification__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScreenSpecificationAccess().getEqualsSignKeyword_7()); }
	'='
	{ after(grammarAccess.getScreenSpecificationAccess().getEqualsSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScreenSpecification__Group__8__Impl
	rule__ScreenSpecification__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScreenSpecificationAccess().getScreenHeightAssignment_8()); }
	(rule__ScreenSpecification__ScreenHeightAssignment_8)
	{ after(grammarAccess.getScreenSpecificationAccess().getScreenHeightAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScreenSpecification__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScreenSpecificationAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getScreenSpecificationAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Obstaclepecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstaclepecification__Group__0__Impl
	rule__Obstaclepecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstaclepecificationAccess().getObstacleKeyword_0()); }
	'obstacle'
	{ after(grammarAccess.getObstaclepecificationAccess().getObstacleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstaclepecification__Group__1__Impl
	rule__Obstaclepecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstaclepecificationAccess().getNameAssignment_1()); }
	(rule__Obstaclepecification__NameAssignment_1)
	{ after(grammarAccess.getObstaclepecificationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstaclepecification__Group__2__Impl
	rule__Obstaclepecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstaclepecificationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getObstaclepecificationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstaclepecification__Group__3__Impl
	rule__Obstaclepecification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstaclepecificationAccess().getFieldsAssignment_3()); }
	(rule__Obstaclepecification__FieldsAssignment_3)*
	{ after(grammarAccess.getObstaclepecificationAccess().getFieldsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstaclepecification__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstaclepecificationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getObstaclepecificationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WaterObstacle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaterObstacle__Group__0__Impl
	rule__WaterObstacle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WaterObstacle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaterObstacleAccess().getWaterKeyword_0()); }
	'water'
	{ after(grammarAccess.getWaterObstacleAccess().getWaterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaterObstacle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaterObstacle__Group__1__Impl
	rule__WaterObstacle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WaterObstacle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaterObstacleAccess().getNameAssignment_1()); }
	(rule__WaterObstacle__NameAssignment_1)
	{ after(grammarAccess.getWaterObstacleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaterObstacle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaterObstacle__Group__2__Impl
	rule__WaterObstacle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WaterObstacle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaterObstacleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getWaterObstacleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaterObstacle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaterObstacle__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WaterObstacle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaterObstacleAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getWaterObstacleAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WallObstacle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__0__Impl
	rule__WallObstacle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getSpaceKeyword_0()); }
	'space'
	{ after(grammarAccess.getWallObstacleAccess().getSpaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__1__Impl
	rule__WallObstacle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getNameAssignment_1()); }
	(rule__WallObstacle__NameAssignment_1)
	{ after(grammarAccess.getWallObstacleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__2__Impl
	rule__WallObstacle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getWallObstacleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__3__Impl
	rule__WallObstacle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getSpaceWidthKeyword_3()); }
	'spaceWidth'
	{ after(grammarAccess.getWallObstacleAccess().getSpaceWidthKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__4__Impl
	rule__WallObstacle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__5__Impl
	rule__WallObstacle__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getWallWidthAssignment_5()); }
	(rule__WallObstacle__WallWidthAssignment_5)
	{ after(grammarAccess.getWallObstacleAccess().getWallWidthAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__6__Impl
	rule__WallObstacle__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getSpaceHeightKeyword_6()); }
	'spaceHeight'
	{ after(grammarAccess.getWallObstacleAccess().getSpaceHeightKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__7__Impl
	rule__WallObstacle__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_7()); }
	'='
	{ after(grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__8__Impl
	rule__WallObstacle__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getWallHeightAssignment_8()); }
	(rule__WallObstacle__WallHeightAssignment_8)
	{ after(grammarAccess.getWallObstacleAccess().getWallHeightAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__9__Impl
	rule__WallObstacle__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getSpacePosXKeyword_9()); }
	'spacePosX'
	{ after(grammarAccess.getWallObstacleAccess().getSpacePosXKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__10__Impl
	rule__WallObstacle__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_10()); }
	'='
	{ after(grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__11__Impl
	rule__WallObstacle__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getWallPosXAssignment_11()); }
	(rule__WallObstacle__WallPosXAssignment_11)
	{ after(grammarAccess.getWallObstacleAccess().getWallPosXAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__12__Impl
	rule__WallObstacle__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getSpacePosYKeyword_12()); }
	'spacePosY'
	{ after(grammarAccess.getWallObstacleAccess().getSpacePosYKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__13__Impl
	rule__WallObstacle__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_13()); }
	'='
	{ after(grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__14__Impl
	rule__WallObstacle__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getWallPosYAssignment_14()); }
	(rule__WallObstacle__WallPosYAssignment_14)
	{ after(grammarAccess.getWallObstacleAccess().getWallPosYAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WallObstacle__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallObstacleAccess().getRightCurlyBracketKeyword_15()); }
	'}'
	{ after(grammarAccess.getWallObstacleAccess().getRightCurlyBracketKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__0__Impl
	rule__FieldSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getFieldKeyword_0()); }
	'field'
	{ after(grammarAccess.getFieldSpecificationAccess().getFieldKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__1__Impl
	rule__FieldSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getNameAssignment_1()); }
	(rule__FieldSpecification__NameAssignment_1)
	{ after(grammarAccess.getFieldSpecificationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__2__Impl
	rule__FieldSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getFieldSpecificationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__3__Impl
	rule__FieldSpecification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getEnemyCountKeyword_3()); }
	'enemyCount'
	{ after(grammarAccess.getFieldSpecificationAccess().getEnemyCountKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__4__Impl
	rule__FieldSpecification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__5__Impl
	rule__FieldSpecification__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getEnemyCountAssignment_5()); }
	(rule__FieldSpecification__EnemyCountAssignment_5)
	{ after(grammarAccess.getFieldSpecificationAccess().getEnemyCountAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__6__Impl
	rule__FieldSpecification__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getObstacleAssignment_6()); }
	(rule__FieldSpecification__ObstacleAssignment_6)
	{ after(grammarAccess.getFieldSpecificationAccess().getObstacleAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__7__Impl
	rule__FieldSpecification__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getNextLevelKeyword_7()); }
	'nextLevel'
	{ after(grammarAccess.getFieldSpecificationAccess().getNextLevelKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__8__Impl
	rule__FieldSpecification__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getGotoKeyword_8()); }
	'goto'
	{ after(grammarAccess.getFieldSpecificationAccess().getGotoKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__9__Impl
	rule__FieldSpecification__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getNextLevelAssignment_9()); }
	(rule__FieldSpecification__NextLevelAssignment_9)
	{ after(grammarAccess.getFieldSpecificationAccess().getNextLevelAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getFieldSpecificationAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuperModeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuperModeDeclaration__Group__0__Impl
	rule__SuperModeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperModeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperModeDeclarationAccess().getSuperModeKeyword_0()); }
	'superMode'
	{ after(grammarAccess.getSuperModeDeclarationAccess().getSuperModeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperModeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuperModeDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperModeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperModeDeclarationAccess().getSuperModeDeclarationAction_1()); }
	()
	{ after(grammarAccess.getSuperModeDeclarationAccess().getSuperModeDeclarationAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartFieldDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartFieldDeclaration__Group__0__Impl
	rule__StartFieldDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartFieldDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartFieldDeclarationAccess().getStartKeyword_0()); }
	'start'
	{ after(grammarAccess.getStartFieldDeclarationAccess().getStartKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartFieldDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartFieldDeclaration__Group__1__Impl
	rule__StartFieldDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartFieldDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartFieldDeclarationAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getStartFieldDeclarationAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartFieldDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartFieldDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartFieldDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartFieldDeclarationAccess().getFieldAssignment_2()); }
	(rule__StartFieldDeclaration__FieldAssignment_2)
	{ after(grammarAccess.getStartFieldDeclarationAccess().getFieldAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AllowRestartMenu__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowRestartMenu__Group__0__Impl
	rule__AllowRestartMenu__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowRestartMenu__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowRestartMenuAccess().getAllowRestartKeyword_0()); }
	'allowRestart'
	{ after(grammarAccess.getAllowRestartMenuAccess().getAllowRestartKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowRestartMenu__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowRestartMenu__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowRestartMenu__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowRestartMenuAccess().getAllowRestartMenuAction_1()); }
	()
	{ after(grammarAccess.getAllowRestartMenuAccess().getAllowRestartMenuAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
	{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
	(rule__Addition__Group_1__0)*
	{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__1__Impl
	rule__Addition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getOperatorAssignment_1_1()); }
	(rule__Addition__OperatorAssignment_1_1)
	{ after(grammarAccess.getAdditionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_2()); }
	(rule__Addition__RightAssignment_1_2)
	{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMultiplicationAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
	(rule__Multiplication__Group_1__0)*
	{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__1__Impl
	rule__Multiplication__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getOperatorAssignment_1_1()); }
	(rule__Multiplication__OperatorAssignment_1_1)
	{ after(grammarAccess.getMultiplicationAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
	(rule__Multiplication__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
	rule__Primary__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getAdditionParserRuleCall_3_1()); }
	ruleAddition
	{ after(grammarAccess.getPrimaryAccess().getAdditionParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__0__Impl
	rule__REAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
	(RULE_INT)?
	{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__1__Impl
	rule__REAL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RaceGame__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaceGameAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRaceGameAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__VariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaceGameAccess().getVariableVariableDeclarationParserRuleCall_3_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getRaceGameAccess().getVariableVariableDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__ScreenAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaceGameAccess().getScreenScreenSpecificationParserRuleCall_4_0()); }
		ruleScreenSpecification
		{ after(grammarAccess.getRaceGameAccess().getScreenScreenSpecificationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__FieldsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaceGameAccess().getFieldsFieldSpecificationParserRuleCall_5_0()); }
		ruleFieldSpecification
		{ after(grammarAccess.getRaceGameAccess().getFieldsFieldSpecificationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaceGame__OptionsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaceGameAccess().getOptionsOptionSpecificationParserRuleCall_6_0()); }
		ruleOptionSpecification
		{ after(grammarAccess.getRaceGameAccess().getOptionsOptionSpecificationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getValueINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getVariableDeclarationAccess().getValueINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__WinAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndGameBehaviourAccess().getWinSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getEndGameBehaviourAccess().getWinSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndGameBehaviour__LostAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndGameBehaviourAccess().getLostSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getEndGameBehaviourAccess().getLostSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScreenSpecificationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScreenSpecificationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__ScreenWidthAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScreenSpecificationAccess().getScreenWidthINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getScreenSpecificationAccess().getScreenWidthINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScreenSpecification__ScreenHeightAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScreenSpecificationAccess().getScreenHeightINTTerminalRuleCall_8_0()); }
		RULE_INT
		{ after(grammarAccess.getScreenSpecificationAccess().getScreenHeightINTTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObstaclepecificationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObstaclepecificationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstaclepecification__FieldsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObstaclepecificationAccess().getFieldsObstacleMemberParserRuleCall_3_0()); }
		ruleObstacleMember
		{ after(grammarAccess.getObstaclepecificationAccess().getFieldsObstacleMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaterObstacle__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWaterObstacleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWaterObstacleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWallObstacleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWallObstacleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__WallWidthAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWallObstacleAccess().getWallWidthINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getWallObstacleAccess().getWallWidthINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__WallHeightAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWallObstacleAccess().getWallHeightINTTerminalRuleCall_8_0()); }
		RULE_INT
		{ after(grammarAccess.getWallObstacleAccess().getWallHeightINTTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__WallPosXAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWallObstacleAccess().getWallPosXINTTerminalRuleCall_11_0()); }
		RULE_INT
		{ after(grammarAccess.getWallObstacleAccess().getWallPosXINTTerminalRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WallObstacle__WallPosYAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWallObstacleAccess().getWallPosYINTTerminalRuleCall_14_0()); }
		RULE_INT
		{ after(grammarAccess.getWallObstacleAccess().getWallPosYINTTerminalRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldSpecificationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldSpecificationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__EnemyCountAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldSpecificationAccess().getEnemyCountAdditionParserRuleCall_5_0()); }
		ruleAddition
		{ after(grammarAccess.getFieldSpecificationAccess().getEnemyCountAdditionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__ObstacleAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldSpecificationAccess().getObstacleObstaclepecificationParserRuleCall_6_0()); }
		ruleObstaclepecification
		{ after(grammarAccess.getFieldSpecificationAccess().getObstacleObstaclepecificationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__NextLevelAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldSpecificationAccess().getNextLevelFieldSpecificationCrossReference_9_0()); }
		(
			{ before(grammarAccess.getFieldSpecificationAccess().getNextLevelFieldSpecificationIDTerminalRuleCall_9_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFieldSpecificationAccess().getNextLevelFieldSpecificationIDTerminalRuleCall_9_0_1()); }
		)
		{ after(grammarAccess.getFieldSpecificationAccess().getNextLevelFieldSpecificationCrossReference_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartFieldDeclaration__FieldAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartFieldDeclarationAccess().getFieldFieldSpecificationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getStartFieldDeclarationAccess().getFieldFieldSpecificationIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStartFieldDeclarationAccess().getFieldFieldSpecificationIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getStartFieldDeclarationAccess().getFieldFieldSpecificationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getOperatorAlternatives_1_1_0()); }
		(rule__Addition__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getAdditionAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0()); }
		ruleMultiplication
		{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getOperatorAlternatives_1_1_0()); }
		(rule__Multiplication__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getMultiplicationAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getMultiplicationAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVarExpression__VarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntVarExpressionAccess().getVarVariableDeclarationCrossReference_0()); }
		(
			{ before(grammarAccess.getIntVarExpressionAccess().getVarVariableDeclarationIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getIntVarExpressionAccess().getVarVariableDeclarationIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getIntVarExpressionAccess().getVarVariableDeclarationCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntLiteralAccess().getValINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getValREALParserRuleCall_0()); }
		ruleREAL
		{ after(grammarAccess.getRealLiteralAccess().getValREALParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
