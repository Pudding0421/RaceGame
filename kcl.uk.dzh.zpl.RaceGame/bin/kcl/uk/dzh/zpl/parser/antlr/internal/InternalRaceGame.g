/*
 * generated by Xtext 2.26.0
 */
grammar InternalRaceGame;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package kcl.uk.dzh.zpl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package kcl.uk.dzh.zpl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import kcl.uk.dzh.zpl.services.RaceGameGrammarAccess;

}

@parser::members {

 	private RaceGameGrammarAccess grammarAccess;

    public InternalRaceGameParser(TokenStream input, RaceGameGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RaceGame";
   	}

   	@Override
   	protected RaceGameGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRaceGame
entryRuleRaceGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRaceGameRule()); }
	iv_ruleRaceGame=ruleRaceGame
	{ $current=$iv_ruleRaceGame.current; }
	EOF;

// Rule RaceGame
ruleRaceGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='game'
		{
			newLeafNode(otherlv_0, grammarAccess.getRaceGameAccess().getGameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRaceGameAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRaceGameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRaceGameAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRaceGameAccess().getVariableVariableDeclarationParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRaceGameRule());
					}
					add(
						$current,
						"variable",
						lv_variable_3_0,
						"kcl.uk.dzh.zpl.RaceGame.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRaceGameAccess().getScreenScreenSpecificationParserRuleCall_4_0());
				}
				lv_screen_4_0=ruleScreenSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRaceGameRule());
					}
					set(
						$current,
						"screen",
						lv_screen_4_0,
						"kcl.uk.dzh.zpl.RaceGame.ScreenSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRaceGameAccess().getFieldsFieldSpecificationParserRuleCall_5_0());
				}
				lv_fields_5_0=ruleFieldSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRaceGameRule());
					}
					add(
						$current,
						"fields",
						lv_fields_5_0,
						"kcl.uk.dzh.zpl.RaceGame.FieldSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getRaceGameAccess().getOptionsOptionSpecificationParserRuleCall_6_0());
				}
				lv_options_6_0=ruleOptionSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRaceGameRule());
					}
					add(
						$current,
						"options",
						lv_options_6_0,
						"kcl.uk.dzh.zpl.RaceGame.OptionSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getRaceGameAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	iv_ruleVariableDeclaration=ruleVariableDeclaration
	{ $current=$iv_ruleVariableDeclaration.current; }
	EOF;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableDeclarationAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_INT
				{
					newLeafNode(lv_value_3_0, grammarAccess.getVariableDeclarationAccess().getValueINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleEndGameBehaviour
entryRuleEndGameBehaviour returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndGameBehaviourRule()); }
	iv_ruleEndGameBehaviour=ruleEndGameBehaviour
	{ $current=$iv_ruleEndGameBehaviour.current; }
	EOF;

// Rule EndGameBehaviour
ruleEndGameBehaviour returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='end-game'
		{
			newLeafNode(otherlv_0, grammarAccess.getEndGameBehaviourAccess().getEndGameKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEndGameBehaviourAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_win_2_0=RULE_STRING
				{
					newLeafNode(lv_win_2_0, grammarAccess.getEndGameBehaviourAccess().getWinSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEndGameBehaviourRule());
					}
					setWithLastConsumed(
						$current,
						"win",
						lv_win_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getEndGameBehaviourAccess().getCommaKeyword_3());
		}
		(
			(
				lv_lost_4_0=RULE_STRING
				{
					newLeafNode(lv_lost_4_0, grammarAccess.getEndGameBehaviourAccess().getLostSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEndGameBehaviourRule());
					}
					setWithLastConsumed(
						$current,
						"lost",
						lv_lost_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getEndGameBehaviourAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleScreenSpecification
entryRuleScreenSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScreenSpecificationRule()); }
	iv_ruleScreenSpecification=ruleScreenSpecification
	{ $current=$iv_ruleScreenSpecification.current; }
	EOF;

// Rule ScreenSpecification
ruleScreenSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='screen'
		{
			newLeafNode(otherlv_0, grammarAccess.getScreenSpecificationAccess().getScreenKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getScreenSpecificationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScreenSpecificationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getScreenSpecificationAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='Width'
		{
			newLeafNode(otherlv_3, grammarAccess.getScreenSpecificationAccess().getWidthKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getScreenSpecificationAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_screenWidth_5_0=RULE_INT
				{
					newLeafNode(lv_screenWidth_5_0, grammarAccess.getScreenSpecificationAccess().getScreenWidthINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScreenSpecificationRule());
					}
					setWithLastConsumed(
						$current,
						"screenWidth",
						lv_screenWidth_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='Height'
		{
			newLeafNode(otherlv_6, grammarAccess.getScreenSpecificationAccess().getHeightKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getScreenSpecificationAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_screenHeight_8_0=RULE_INT
				{
					newLeafNode(lv_screenHeight_8_0, grammarAccess.getScreenSpecificationAccess().getScreenHeightINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScreenSpecificationRule());
					}
					setWithLastConsumed(
						$current,
						"screenHeight",
						lv_screenHeight_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getScreenSpecificationAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleObstaclepecification
entryRuleObstaclepecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObstaclepecificationRule()); }
	iv_ruleObstaclepecification=ruleObstaclepecification
	{ $current=$iv_ruleObstaclepecification.current; }
	EOF;

// Rule Obstaclepecification
ruleObstaclepecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='obstacle'
		{
			newLeafNode(otherlv_0, grammarAccess.getObstaclepecificationAccess().getObstacleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getObstaclepecificationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObstaclepecificationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getObstaclepecificationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObstaclepecificationAccess().getFieldsObstacleMemberParserRuleCall_3_0());
				}
				lv_fields_3_0=ruleObstacleMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObstaclepecificationRule());
					}
					add(
						$current,
						"fields",
						lv_fields_3_0,
						"kcl.uk.dzh.zpl.RaceGame.ObstacleMember");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getObstaclepecificationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleObstacleMember
entryRuleObstacleMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObstacleMemberRule()); }
	iv_ruleObstacleMember=ruleObstacleMember
	{ $current=$iv_ruleObstacleMember.current; }
	EOF;

// Rule ObstacleMember
ruleObstacleMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getObstacleMemberAccess().getWallObstacleParserRuleCall_0());
		}
		this_WallObstacle_0=ruleWallObstacle
		{
			$current = $this_WallObstacle_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getObstacleMemberAccess().getWaterObstacleParserRuleCall_1());
		}
		this_WaterObstacle_1=ruleWaterObstacle
		{
			$current = $this_WaterObstacle_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleWaterObstacle
entryRuleWaterObstacle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWaterObstacleRule()); }
	iv_ruleWaterObstacle=ruleWaterObstacle
	{ $current=$iv_ruleWaterObstacle.current; }
	EOF;

// Rule WaterObstacle
ruleWaterObstacle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='water'
		{
			newLeafNode(otherlv_0, grammarAccess.getWaterObstacleAccess().getWaterKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getWaterObstacleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWaterObstacleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getWaterObstacleAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getWaterObstacleAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleWallObstacle
entryRuleWallObstacle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWallObstacleRule()); }
	iv_ruleWallObstacle=ruleWallObstacle
	{ $current=$iv_ruleWallObstacle.current; }
	EOF;

// Rule WallObstacle
ruleWallObstacle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='space'
		{
			newLeafNode(otherlv_0, grammarAccess.getWallObstacleAccess().getSpaceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getWallObstacleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWallObstacleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getWallObstacleAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='spaceWidth'
		{
			newLeafNode(otherlv_3, grammarAccess.getWallObstacleAccess().getSpaceWidthKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_wallWidth_5_0=RULE_INT
				{
					newLeafNode(lv_wallWidth_5_0, grammarAccess.getWallObstacleAccess().getWallWidthINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWallObstacleRule());
					}
					setWithLastConsumed(
						$current,
						"wallWidth",
						lv_wallWidth_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='spaceHeight'
		{
			newLeafNode(otherlv_6, grammarAccess.getWallObstacleAccess().getSpaceHeightKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_wallHeight_8_0=RULE_INT
				{
					newLeafNode(lv_wallHeight_8_0, grammarAccess.getWallObstacleAccess().getWallHeightINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWallObstacleRule());
					}
					setWithLastConsumed(
						$current,
						"wallHeight",
						lv_wallHeight_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9='spacePosX'
		{
			newLeafNode(otherlv_9, grammarAccess.getWallObstacleAccess().getSpacePosXKeyword_9());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_10());
		}
		(
			(
				lv_wallPosX_11_0=RULE_INT
				{
					newLeafNode(lv_wallPosX_11_0, grammarAccess.getWallObstacleAccess().getWallPosXINTTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWallObstacleRule());
					}
					setWithLastConsumed(
						$current,
						"wallPosX",
						lv_wallPosX_11_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_12='spacePosY'
		{
			newLeafNode(otherlv_12, grammarAccess.getWallObstacleAccess().getSpacePosYKeyword_12());
		}
		otherlv_13='='
		{
			newLeafNode(otherlv_13, grammarAccess.getWallObstacleAccess().getEqualsSignKeyword_13());
		}
		(
			(
				lv_wallPosY_14_0=RULE_INT
				{
					newLeafNode(lv_wallPosY_14_0, grammarAccess.getWallObstacleAccess().getWallPosYINTTerminalRuleCall_14_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWallObstacleRule());
					}
					setWithLastConsumed(
						$current,
						"wallPosY",
						lv_wallPosY_14_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getWallObstacleAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleFieldSpecification
entryRuleFieldSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldSpecificationRule()); }
	iv_ruleFieldSpecification=ruleFieldSpecification
	{ $current=$iv_ruleFieldSpecification.current; }
	EOF;

// Rule FieldSpecification
ruleFieldSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='field'
		{
			newLeafNode(otherlv_0, grammarAccess.getFieldSpecificationAccess().getFieldKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFieldSpecificationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldSpecificationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFieldSpecificationAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='enemyCount'
		{
			newLeafNode(otherlv_3, grammarAccess.getFieldSpecificationAccess().getEnemyCountKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldSpecificationAccess().getEnemyCountAdditionParserRuleCall_5_0());
				}
				lv_enemyCount_5_0=ruleAddition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldSpecificationRule());
					}
					set(
						$current,
						"enemyCount",
						lv_enemyCount_5_0,
						"kcl.uk.dzh.zpl.RaceGame.Addition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldSpecificationAccess().getObstacleObstaclepecificationParserRuleCall_6_0());
				}
				lv_obstacle_6_0=ruleObstaclepecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldSpecificationRule());
					}
					set(
						$current,
						"obstacle",
						lv_obstacle_6_0,
						"kcl.uk.dzh.zpl.RaceGame.Obstaclepecification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='nextLevel'
		{
			newLeafNode(otherlv_7, grammarAccess.getFieldSpecificationAccess().getNextLevelKeyword_7());
		}
		otherlv_8='goto'
		{
			newLeafNode(otherlv_8, grammarAccess.getFieldSpecificationAccess().getGotoKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldSpecificationRule());
					}
				}
				otherlv_9=RULE_ID
				{
					newLeafNode(otherlv_9, grammarAccess.getFieldSpecificationAccess().getNextLevelFieldSpecificationCrossReference_9_0());
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getFieldSpecificationAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleOptionSpecification
entryRuleOptionSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionSpecificationRule()); }
	iv_ruleOptionSpecification=ruleOptionSpecification
	{ $current=$iv_ruleOptionSpecification.current; }
	EOF;

// Rule OptionSpecification
ruleOptionSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOptionSpecificationAccess().getStartFieldDeclarationParserRuleCall_0());
		}
		this_StartFieldDeclaration_0=ruleStartFieldDeclaration
		{
			$current = $this_StartFieldDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionSpecificationAccess().getAllowRestartMenuParserRuleCall_1());
		}
		this_AllowRestartMenu_1=ruleAllowRestartMenu
		{
			$current = $this_AllowRestartMenu_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionSpecificationAccess().getSuperModeDeclarationParserRuleCall_2());
		}
		this_SuperModeDeclaration_2=ruleSuperModeDeclaration
		{
			$current = $this_SuperModeDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionSpecificationAccess().getEndGameBehaviourParserRuleCall_3());
		}
		this_EndGameBehaviour_3=ruleEndGameBehaviour
		{
			$current = $this_EndGameBehaviour_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSuperModeDeclaration
entryRuleSuperModeDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSuperModeDeclarationRule()); }
	iv_ruleSuperModeDeclaration=ruleSuperModeDeclaration
	{ $current=$iv_ruleSuperModeDeclaration.current; }
	EOF;

// Rule SuperModeDeclaration
ruleSuperModeDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='superMode'
		{
			newLeafNode(otherlv_0, grammarAccess.getSuperModeDeclarationAccess().getSuperModeKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSuperModeDeclarationAccess().getSuperModeDeclarationAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleStartFieldDeclaration
entryRuleStartFieldDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartFieldDeclarationRule()); }
	iv_ruleStartFieldDeclaration=ruleStartFieldDeclaration
	{ $current=$iv_ruleStartFieldDeclaration.current; }
	EOF;

// Rule StartFieldDeclaration
ruleStartFieldDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='start'
		{
			newLeafNode(otherlv_0, grammarAccess.getStartFieldDeclarationAccess().getStartKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getStartFieldDeclarationAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartFieldDeclarationRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getStartFieldDeclarationAccess().getFieldFieldSpecificationCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleAllowRestartMenu
entryRuleAllowRestartMenu returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllowRestartMenuRule()); }
	iv_ruleAllowRestartMenu=ruleAllowRestartMenu
	{ $current=$iv_ruleAllowRestartMenu.current; }
	EOF;

// Rule AllowRestartMenu
ruleAllowRestartMenu returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='allowRestart'
		{
			newLeafNode(otherlv_0, grammarAccess.getAllowRestartMenuAccess().getAllowRestartKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAllowRestartMenuAccess().getAllowRestartMenuAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleAddition
entryRuleAddition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionRule()); }
	iv_ruleAddition=ruleAddition
	{ $current=$iv_ruleAddition.current; }
	EOF;

// Rule Addition
ruleAddition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
		}
		this_Multiplication_0=ruleMultiplication
		{
			$current = $this_Multiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='+'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getAdditionAccess().getOperatorPlusSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAdditionRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='-'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getAdditionAccess().getOperatorHyphenMinusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAdditionRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleMultiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						add(
							$current,
							"right",
							lv_right_3_0,
							"kcl.uk.dzh.zpl.RaceGame.Multiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplication
entryRuleMultiplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicationRule()); }
	iv_ruleMultiplication=ruleMultiplication
	{ $current=$iv_ruleMultiplication.current; }
	EOF;

// Rule Multiplication
ruleMultiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='*'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getMultiplicationAccess().getOperatorAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplicationRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='/'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getMultiplicationAccess().getOperatorSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplicationRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						add(
							$current,
							"right",
							lv_right_3_0,
							"kcl.uk.dzh.zpl.RaceGame.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getIntLiteralParserRuleCall_0());
		}
		this_IntLiteral_0=ruleIntLiteral
		{
			$current = $this_IntLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getIntVarExpressionParserRuleCall_1());
		}
		this_IntVarExpression_1=ruleIntVarExpression
		{
			$current = $this_IntVarExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getRealLiteralParserRuleCall_2());
		}
		this_RealLiteral_2=ruleRealLiteral
		{
			$current = $this_RealLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getAdditionParserRuleCall_3_1());
			}
			this_Addition_4=ruleAddition
			{
				$current = $this_Addition_4.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_2());
			}
		)
	)
;

// Entry rule entryRuleIntVarExpression
entryRuleIntVarExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntVarExpressionRule()); }
	iv_ruleIntVarExpression=ruleIntVarExpression
	{ $current=$iv_ruleIntVarExpression.current; }
	EOF;

// Rule IntVarExpression
ruleIntVarExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntVarExpressionRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getIntVarExpressionAccess().getVarVariableDeclarationCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	iv_ruleIntLiteral=ruleIntLiteral
	{ $current=$iv_ruleIntLiteral.current; }
	EOF;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_val_0_0=RULE_INT
			{
				newLeafNode(lv_val_0_0, grammarAccess.getIntLiteralAccess().getValINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"val",
					lv_val_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRealLiteralRule()); }
	iv_ruleRealLiteral=ruleRealLiteral
	{ $current=$iv_ruleRealLiteral.current; }
	EOF;

// Rule RealLiteral
ruleRealLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRealLiteralAccess().getValREALParserRuleCall_0());
			}
			lv_val_0_0=ruleREAL
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRealLiteralRule());
				}
				set(
					$current,
					"val",
					lv_val_0_0,
					"kcl.uk.dzh.zpl.RaceGame.REAL");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleREAL
entryRuleREAL returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getREALRule()); }
	iv_ruleREAL=ruleREAL
	{ $current=$iv_ruleREAL.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule REAL
ruleREAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			this_INT_0=RULE_INT
			{
				$current.merge(this_INT_0);
			}
			{
				newLeafNode(this_INT_0, grammarAccess.getREALAccess().getINTTerminalRuleCall_0());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREALAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getREALAccess().getINTTerminalRuleCall_2());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
