/**
 * generated by Xtext 2.26.0
 */
package kcl.uk.dzh.zpl.raceGame.impl;

import kcl.uk.dzh.zpl.raceGame.RaceGamePackage;
import kcl.uk.dzh.zpl.raceGame.WallObstacle;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Wall Obstacle</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link kcl.uk.dzh.zpl.raceGame.impl.WallObstacleImpl#getWallWidth <em>Wall Width</em>}</li>
 *   <li>{@link kcl.uk.dzh.zpl.raceGame.impl.WallObstacleImpl#getWallHeight <em>Wall Height</em>}</li>
 *   <li>{@link kcl.uk.dzh.zpl.raceGame.impl.WallObstacleImpl#getWallPosX <em>Wall Pos X</em>}</li>
 *   <li>{@link kcl.uk.dzh.zpl.raceGame.impl.WallObstacleImpl#getWallPosY <em>Wall Pos Y</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WallObstacleImpl extends ObstacleMemberImpl implements WallObstacle
{
  /**
   * The default value of the '{@link #getWallWidth() <em>Wall Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWallWidth()
   * @generated
   * @ordered
   */
  protected static final int WALL_WIDTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getWallWidth() <em>Wall Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWallWidth()
   * @generated
   * @ordered
   */
  protected int wallWidth = WALL_WIDTH_EDEFAULT;

  /**
   * The default value of the '{@link #getWallHeight() <em>Wall Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWallHeight()
   * @generated
   * @ordered
   */
  protected static final int WALL_HEIGHT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getWallHeight() <em>Wall Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWallHeight()
   * @generated
   * @ordered
   */
  protected int wallHeight = WALL_HEIGHT_EDEFAULT;

  /**
   * The default value of the '{@link #getWallPosX() <em>Wall Pos X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWallPosX()
   * @generated
   * @ordered
   */
  protected static final int WALL_POS_X_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getWallPosX() <em>Wall Pos X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWallPosX()
   * @generated
   * @ordered
   */
  protected int wallPosX = WALL_POS_X_EDEFAULT;

  /**
   * The default value of the '{@link #getWallPosY() <em>Wall Pos Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWallPosY()
   * @generated
   * @ordered
   */
  protected static final int WALL_POS_Y_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getWallPosY() <em>Wall Pos Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWallPosY()
   * @generated
   * @ordered
   */
  protected int wallPosY = WALL_POS_Y_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WallObstacleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RaceGamePackage.Literals.WALL_OBSTACLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getWallWidth()
  {
    return wallWidth;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWallWidth(int newWallWidth)
  {
    int oldWallWidth = wallWidth;
    wallWidth = newWallWidth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RaceGamePackage.WALL_OBSTACLE__WALL_WIDTH, oldWallWidth, wallWidth));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getWallHeight()
  {
    return wallHeight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWallHeight(int newWallHeight)
  {
    int oldWallHeight = wallHeight;
    wallHeight = newWallHeight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RaceGamePackage.WALL_OBSTACLE__WALL_HEIGHT, oldWallHeight, wallHeight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getWallPosX()
  {
    return wallPosX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWallPosX(int newWallPosX)
  {
    int oldWallPosX = wallPosX;
    wallPosX = newWallPosX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RaceGamePackage.WALL_OBSTACLE__WALL_POS_X, oldWallPosX, wallPosX));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getWallPosY()
  {
    return wallPosY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWallPosY(int newWallPosY)
  {
    int oldWallPosY = wallPosY;
    wallPosY = newWallPosY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RaceGamePackage.WALL_OBSTACLE__WALL_POS_Y, oldWallPosY, wallPosY));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RaceGamePackage.WALL_OBSTACLE__WALL_WIDTH:
        return getWallWidth();
      case RaceGamePackage.WALL_OBSTACLE__WALL_HEIGHT:
        return getWallHeight();
      case RaceGamePackage.WALL_OBSTACLE__WALL_POS_X:
        return getWallPosX();
      case RaceGamePackage.WALL_OBSTACLE__WALL_POS_Y:
        return getWallPosY();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RaceGamePackage.WALL_OBSTACLE__WALL_WIDTH:
        setWallWidth((Integer)newValue);
        return;
      case RaceGamePackage.WALL_OBSTACLE__WALL_HEIGHT:
        setWallHeight((Integer)newValue);
        return;
      case RaceGamePackage.WALL_OBSTACLE__WALL_POS_X:
        setWallPosX((Integer)newValue);
        return;
      case RaceGamePackage.WALL_OBSTACLE__WALL_POS_Y:
        setWallPosY((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RaceGamePackage.WALL_OBSTACLE__WALL_WIDTH:
        setWallWidth(WALL_WIDTH_EDEFAULT);
        return;
      case RaceGamePackage.WALL_OBSTACLE__WALL_HEIGHT:
        setWallHeight(WALL_HEIGHT_EDEFAULT);
        return;
      case RaceGamePackage.WALL_OBSTACLE__WALL_POS_X:
        setWallPosX(WALL_POS_X_EDEFAULT);
        return;
      case RaceGamePackage.WALL_OBSTACLE__WALL_POS_Y:
        setWallPosY(WALL_POS_Y_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RaceGamePackage.WALL_OBSTACLE__WALL_WIDTH:
        return wallWidth != WALL_WIDTH_EDEFAULT;
      case RaceGamePackage.WALL_OBSTACLE__WALL_HEIGHT:
        return wallHeight != WALL_HEIGHT_EDEFAULT;
      case RaceGamePackage.WALL_OBSTACLE__WALL_POS_X:
        return wallPosX != WALL_POS_X_EDEFAULT;
      case RaceGamePackage.WALL_OBSTACLE__WALL_POS_Y:
        return wallPosY != WALL_POS_Y_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (wallWidth: ");
    result.append(wallWidth);
    result.append(", wallHeight: ");
    result.append(wallHeight);
    result.append(", wallPosX: ");
    result.append(wallPosX);
    result.append(", wallPosY: ");
    result.append(wallPosY);
    result.append(')');
    return result.toString();
  }

} //WallObstacleImpl
