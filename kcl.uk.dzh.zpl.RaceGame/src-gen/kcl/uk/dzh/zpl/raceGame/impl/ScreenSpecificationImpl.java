/**
 * generated by Xtext 2.26.0
 */
package kcl.uk.dzh.zpl.raceGame.impl;

import kcl.uk.dzh.zpl.raceGame.RaceGamePackage;
import kcl.uk.dzh.zpl.raceGame.ScreenSpecification;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Screen Specification</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link kcl.uk.dzh.zpl.raceGame.impl.ScreenSpecificationImpl#getName <em>Name</em>}</li>
 *   <li>{@link kcl.uk.dzh.zpl.raceGame.impl.ScreenSpecificationImpl#getScreenWidth <em>Screen Width</em>}</li>
 *   <li>{@link kcl.uk.dzh.zpl.raceGame.impl.ScreenSpecificationImpl#getScreenHeight <em>Screen Height</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ScreenSpecificationImpl extends MinimalEObjectImpl.Container implements ScreenSpecification
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getScreenWidth() <em>Screen Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScreenWidth()
   * @generated
   * @ordered
   */
  protected static final int SCREEN_WIDTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getScreenWidth() <em>Screen Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScreenWidth()
   * @generated
   * @ordered
   */
  protected int screenWidth = SCREEN_WIDTH_EDEFAULT;

  /**
   * The default value of the '{@link #getScreenHeight() <em>Screen Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScreenHeight()
   * @generated
   * @ordered
   */
  protected static final int SCREEN_HEIGHT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getScreenHeight() <em>Screen Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScreenHeight()
   * @generated
   * @ordered
   */
  protected int screenHeight = SCREEN_HEIGHT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ScreenSpecificationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RaceGamePackage.Literals.SCREEN_SPECIFICATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RaceGamePackage.SCREEN_SPECIFICATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getScreenWidth()
  {
    return screenWidth;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setScreenWidth(int newScreenWidth)
  {
    int oldScreenWidth = screenWidth;
    screenWidth = newScreenWidth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RaceGamePackage.SCREEN_SPECIFICATION__SCREEN_WIDTH, oldScreenWidth, screenWidth));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getScreenHeight()
  {
    return screenHeight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setScreenHeight(int newScreenHeight)
  {
    int oldScreenHeight = screenHeight;
    screenHeight = newScreenHeight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RaceGamePackage.SCREEN_SPECIFICATION__SCREEN_HEIGHT, oldScreenHeight, screenHeight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RaceGamePackage.SCREEN_SPECIFICATION__NAME:
        return getName();
      case RaceGamePackage.SCREEN_SPECIFICATION__SCREEN_WIDTH:
        return getScreenWidth();
      case RaceGamePackage.SCREEN_SPECIFICATION__SCREEN_HEIGHT:
        return getScreenHeight();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RaceGamePackage.SCREEN_SPECIFICATION__NAME:
        setName((String)newValue);
        return;
      case RaceGamePackage.SCREEN_SPECIFICATION__SCREEN_WIDTH:
        setScreenWidth((Integer)newValue);
        return;
      case RaceGamePackage.SCREEN_SPECIFICATION__SCREEN_HEIGHT:
        setScreenHeight((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RaceGamePackage.SCREEN_SPECIFICATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case RaceGamePackage.SCREEN_SPECIFICATION__SCREEN_WIDTH:
        setScreenWidth(SCREEN_WIDTH_EDEFAULT);
        return;
      case RaceGamePackage.SCREEN_SPECIFICATION__SCREEN_HEIGHT:
        setScreenHeight(SCREEN_HEIGHT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RaceGamePackage.SCREEN_SPECIFICATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case RaceGamePackage.SCREEN_SPECIFICATION__SCREEN_WIDTH:
        return screenWidth != SCREEN_WIDTH_EDEFAULT;
      case RaceGamePackage.SCREEN_SPECIFICATION__SCREEN_HEIGHT:
        return screenHeight != SCREEN_HEIGHT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", screenWidth: ");
    result.append(screenWidth);
    result.append(", screenHeight: ");
    result.append(screenHeight);
    result.append(')');
    return result.toString();
  }

} //ScreenSpecificationImpl
